import java.io.FileReader;
import java.io.IOException;
import java.util.Map;
import java.util.TreeMap;

public class FlexManager {
    private final TreeMap<String,Symbol> variablesTable;
    final LexicalAnalyzer analyzer;

    public FlexManager(FileReader source){
        /**
         * The lexer generated by <a href="http://www.jflex.de/">JFlex</a> 1.4.3
         */
        analyzer = new LexicalAnalyzer(source);
        /**
         * The variables, sorted in a TreeMap, which maps the name of the variable to its corresponding Symbol.
         */
        variablesTable = new TreeMap<String, Symbol>();
    }


    public void parseFlex() throws IOException {
        // symbol represents the currently read symbol
        Symbol symbol = null;
        // We iterate while we do not reach the end of the file (marked by EOS)
        while (!(symbol = analyzer.nextToken()).getType().equals(LexicalUnit.EOS)) {
            System.out.println(symbol.toString());
            // If it is a variable, add it to the table
            if (symbol.getType().equals(LexicalUnit.VARNAME)) {
                if (!variablesTable.containsKey(symbol.getValue())) {
                    variablesTable.put(symbol.getValue().toString(), symbol);
                }
            }
        }
    }


    public void printVariables(){

        System.out.println("\nVariables");
        // Print the variables
        for(Map.Entry<String, Symbol> variable : variablesTable.entrySet())
            System.out.println(variable.getKey()+"\t"+(variable.getValue().getLine()));
    }


    public TreeMap<String, Symbol> getVariablesTable(){
        return variablesTable;
    }
}
